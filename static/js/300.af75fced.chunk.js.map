{"version":3,"file":"static/js/300.af75fced.chunk.js","mappings":"sOAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAGzB,IAAMC,EAAU,kCACVC,EAAe,iBAGfC,EAAQ,SASDC,EAAe,mCAAG,oGACNJ,EAAAA,EAAAA,IAAA,UAZR,qBAYQ,YAAyBC,IADnB,cACvBI,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qDAsBfC,EAAa,mCAAG,WAAMC,GAAN,uFACJT,EAAAA,EAAAA,IAAA,UAClBG,GADkB,OACVM,GADU,OA/BT,WA+BS,YACWR,EADX,YACsBC,IAFlB,cACrBG,EADqB,yBAIpBA,EAASC,KAAKI,MAJM,2CAAH,qD,yJCrB1B,EAhBkB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,EAAAC,KAAD,UACGH,EAAMI,KAAI,SAAAC,GAAI,OACb,SAAC,EAAAC,KAAD,WACE,SAAC,EAAAC,UAAD,CAAWC,GAAE,kBAAaH,EAAKI,IAAMC,MAAO,CAAEC,KAAMV,GAApD,SACGI,EAAKO,SAFCP,EAAKI,GADH,KASpB,E,0BCVYI,EAAO,WAClB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOd,EAAP,KAAce,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAsBA,OAnBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAkB,mCAAG,2FACzBF,GAAW,GADc,mBAIKxB,EAAAA,EAAAA,MAJL,OAIjB2B,EAJiB,OAKvBL,EAASK,GACTC,EAAAA,GAAAA,QAAc,oCANS,gDAQvBA,EAAAA,GAAAA,MAAY,wCARW,yBAUvBJ,GAAW,GAVY,4EAAH,qDAcxBE,GACD,GAAE,KAID,4BACE,wBAAI,oBACJ,SAAC,EAAD,CAAWnB,MAAOA,IAEjBgB,IAAW,SAACM,EAAA,EAAD,KACZ,SAAC,KAAD,CAASC,SAAS,gBAGvB,C","sources":["components/Api/Api.jsx","pages/ListFilms/ListFilms.jsx","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n/*   ====== FETCH REQUEST API ======*/\nconst API_KEY = '64832fedcffbe340ec8c3c22e595e81';\nconst ENGLISH_LANG = 'language=en-US';\nconst TRENDING = 'trending/movie/day';\nconst SEARCH = 'search/movie';\nconst MOVIE = 'movie/';\nconst CREDITS = '/credits';\nconst REVIEWS = '/reviews';\nconst PAGE = 'page=1';\nconst ADULT_FALSE = 'include_adult=false';\n\n/*   ====== REQUEST API ASYNC FUNCTION ⬇️  ======*/\n\n/*   ====== TREND MOVIES FOR TODAY ======*/\nexport const requestTrending = async () => {\n  const response = await axios.get(`${TRENDING}?${API_KEY}`);\n  return response.data.results;\n};\n\n/*   ====== SEARCH MOVIES ======*/\nexport const requestSearch = async keyword => {\n  const response = await axios.get(\n    `${SEARCH}?${API_KEY}&${ENGLISH_LANG}&${PAGE}&${ADULT_FALSE}&query=${keyword}`\n  );\n  return response.data.results;\n};\n\n/*   ====== MOVIE ======*/\nexport const requestMovieDetails = async movieId => {\n  const response = await axios.get(\n    `${MOVIE}${movieId}?${API_KEY}&${ENGLISH_LANG}`\n  );\n  return response.data;\n};\n\n/*   ====== MOVIE ACTORS ======*/\nexport const requestActors = async movieId => {\n  const response = await axios.get(\n    `${MOVIE}${movieId}${CREDITS}?${API_KEY}&${ENGLISH_LANG}`\n  );\n  return response.data.cast;\n};\n\n/*   ====== MOVIE REVIEWS ======*/\nexport const requestReviews = async movieId => {\n  const response = await axios.get(\n    `${MOVIE}${movieId}${REVIEWS}?${API_KEY}&${ENGLISH_LANG}&${PAGE}`\n  );\n  return response.data.results;\n};\n","import { useLocation } from 'react-router-dom';\nimport { List, Item, MovieLink } from './ListFilms.styled';\n\nconst ListFilms = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {films.map(film => (\n        <Item key={film.id}>\n          <MovieLink to={`/movies/${film.id}`} state={{ from: location }}>\n            {film.title}\n          </MovieLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default ListFilms;\n","import React, { useEffect, useState } from 'react';\nimport ListFilms from 'pages/ListFilms/ListFilms';\nimport { requestTrending } from 'components/Api/Api';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { Loader } from 'components/Loader/Loader';\n\n/*   ====== HOOKS ======*/\nexport const Home = () => {\n  const [films, setFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  /*   ====== REQUEST FILMS TRENDING ======*/\n  useEffect(() => {\n    const getRequestTrending = async () => {\n      setLoading(true);\n\n      try {\n        const trendingFilms = await requestTrending();\n        setFilms(trendingFilms);\n        toast.success('😊 Yes, we found films');\n      } catch (error) {\n        toast.error('🥺 Sorry, we found nothing');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getRequestTrending();\n  }, []);\n\n  /*   ====== RENDER ======*/\n  return (\n    <div>\n      <h1>Trending today</h1>\n      <ListFilms films={films} />\n\n      {loading && <Loader />}\n      <Toaster position=\"top-right\" />\n    </div>\n  );\n};\n"],"names":["axios","API_KEY","ENGLISH_LANG","MOVIE","requestTrending","response","data","results","requestActors","movieId","cast","films","location","useLocation","List","map","film","Item","MovieLink","to","id","state","from","title","Home","useState","setFilms","loading","setLoading","useEffect","getRequestTrending","trendingFilms","toast","Loader","position"],"sourceRoot":""}