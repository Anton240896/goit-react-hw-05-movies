{"version":3,"file":"static/js/33.ce49d515.chunk.js","mappings":"6PAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAIzB,IAAMC,EAAU,mCAKHC,EAAe,mCAAG,oGACNF,EAAAA,EAAAA,IAAA,qCAAwCC,IADlC,cACvBE,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qDAcfC,EAAmB,mCAAG,WAAMC,GAAN,uFACVP,EAAAA,EAAAA,IAAA,gBACZO,EADY,oBACON,EADP,oBADU,cAC3BE,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,sDAQnBI,EAAa,mCAAG,WAAMD,GAAN,uFACJP,EAAAA,EAAAA,IAAA,gBACZO,EADY,4BACeN,EADf,oBADI,cACrBE,EADqB,yBAIpBA,EAASC,KAAKK,MAJM,2CAAH,qD,6JC9BbC,EAAYC,EAAAA,GAAAA,IAAH,0EAOTC,EAAOD,EAAAA,GAAAA,GAAH,kHAQJE,EAAWF,EAAAA,GAAAA,GAAH,qIASRG,GAAWH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,yJ,SCuErB,EA1FqB,WAAO,IAAD,IACjBJ,GAAYS,EAAAA,EAAAA,MAAZT,QACR,GAAkCU,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,WAENH,GAAW,IAEXf,EAAAA,EAAAA,IAAoBC,GACjBkB,MAAK,SAAAC,GACJP,EAAaO,EACd,IACAC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MACE,4DAEH,IACAC,SAAQ,WACPT,GAAW,EACZ,GAIN,GAAE,CAACd,IAGJ,MAQIW,GAAa,CAAC,EAPhBa,EADF,EACEA,MACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,OACAC,EANF,EAMEA,YACAC,EAPF,EAOEA,eAIF,OACE,0BACGnB,IACC,UAACR,EAAD,YACE,gBACE4B,MAAM,QACNC,IACEH,EAAW,yCAC2BA,GAD3B,6EAIbI,IAAKH,KAGP,4BACE,0BACGN,EAAM,KAAGC,EAAaS,MAAM,EAAG,GAAG,QAErC,yBAAG,eAAaR,MAChB,wBAAI,cACJ,uBAAIC,KACJ,wBAAI,YACJ,UAACtB,EAAD,WACGuB,EAAOO,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAME,GADA,KAIjB,4BACE,wBAAI,4BACJ,UAAChC,EAAD,YACE,yBACE,SAACC,EAAD,CAAUgC,GAAG,OAAb,SAAoB,cAEtB,yBACE,SAAChC,EAAD,CAAUgC,GAAG,UAAb,SAAuB,kBAG3B,SAAC,KAAD,cAKN,SAAC,KAAD,CAAMA,GAAE,oBAAExB,EAASyB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,MACjC5B,IAAW,SAAC6B,EAAA,EAAD,QAKrB,C","sources":["components/Api/Api.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n/*   ====== KEY API ======*/\n\nconst API_KEY = '992758a4802a699e8df27d4d6efc34fb';\n\n/*   ====== REQUEST API ASYNC FUNCTION ⬇️  ======*/\n\n/*   ====== TREND MOVIES FOR TODAY ======*/\nexport const requestTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\n/*   ====== SEARCH MOVIES ======*/\nexport const requestSearch = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\n/*   ====== MOVIE ======*/\nexport const requestMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\n/*   ====== MOVIE ACTORS ======*/\nexport const requestActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\n/*   ====== MOVIE REVIEWS ======*/\nexport const requestReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  margin: 7px;\n\n  gap: 11px;\n`;\n\nexport const List = styled.ul`\n  gap: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n`;\n\nexport const ListInfo = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const LinkInfo = styled(Link)`\n  text-decoration: none;\n  font-weight: 600;\n  font-size: 18px;\n  color: #191d1e;\n\n  &:hover {\n    color: red;\n  }\n  //\n`;\n\n// export const Button = styled.button`\n//   padding: 8px 8px;\n//   cursor: pointer;\n//   border-radius: 4px;\n//   border: 3px solid #191d1e;\n//   color: #191d1e;\n//   font-weight: 600;\n//   font-size: 20px;\n//   border-radius: 4px 8px;\n\n//   &:hover {\n//     color: red;\n//     border: 3px solid red;\n//   }\n// `;\n","import { useEffect, useState } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { requestMovieDetails } from 'components/Api/Api';\nimport Loader from 'components/Loader/Loader';\nimport toast from 'react-hot-toast';\nimport { Container, List, ListInfo, LinkInfo } from './MovieDetails.styled';\n\n/*   ====== HOOKS ======*/\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  /*   ====== FETCH REQUEST ======*/\n  useEffect(() => {\n    const fetchMovieDetailsFilms = () => {\n      setLoading(true);\n\n      requestMovieDetails(movieId)\n        .then(detailMovie => {\n          setMovieInfo(detailMovie);\n        })\n        .catch(error => {\n          toast.error(\n            'Sorry, we didnt find what you were looking for, try again'\n          );\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    fetchMovieDetailsFilms();\n  }, [movieId]);\n\n  /*   ======  ======*/\n  const {\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n  } = movieInfo || {};\n\n  /*   ====== RENDER ======*/\n  return (\n    <main>\n      {movieInfo && (\n        <Container>\n          <img\n            width=\"400px\"\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : `https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg`\n            }\n            alt={original_title}\n          />\n\n          <div>\n            <h1>\n              {title} ({release_date.slice(0, 4)})\n            </h1>\n            <p>User score: {popularity}</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h2>Genres</h2>\n            <List>\n              {genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n\n              <div>\n                <h3>Additional information</h3>\n                <ListInfo>\n                  <li>\n                    <LinkInfo to=\"cast\">Actors</LinkInfo>\n                  </li>\n                  <li>\n                    <LinkInfo to=\"reviews\">Reviews</LinkInfo>\n                  </li>\n                </ListInfo>\n                <Outlet />\n              </div>\n            </List>\n          </div>\n\n          <Link to={location.state?.from ?? '/'}></Link>\n          {loading && <Loader />}\n        </Container>\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","requestTrending","response","data","results","requestMovieDetails","movieId","requestActors","cast","Container","styled","List","ListInfo","LinkInfo","Link","useParams","useState","movieInfo","setMovieInfo","loading","setLoading","location","useLocation","useEffect","then","detailMovie","catch","error","toast","finally","title","release_date","popularity","overview","genres","poster_path","original_title","width","src","alt","slice","map","genre","name","id","to","state","from","Loader"],"sourceRoot":""}