{"version":3,"file":"static/js/436.35888afa.chunk.js","mappings":"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","sources":["components/Api/Api.jsx","components/ListFilms/ListFilms.styled.js","components/ListFilms/ListFilms.jsx","pages/MovieDetails/MovieDetails.styled.js","components/Form/Form.styled.js","components/Form/Form.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n/*   ====== KEY API ======*/\n\nconst API_KEY = '992758a4802a699e8df27d4d6efc34fb';\n\n/*   ====== REQUEST API ASYNC FUNCTION ⬇️  ======*/\n\n/*   ====== TREND MOVIES FOR TODAY ======*/\nexport const requestTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\n/*   ====== SEARCH MOVIES ======*/\nexport const requestSearch = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n};\n\n/*   ====== MOVIE ======*/\nexport const requestMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\n/*   ====== MOVIE ACTORS ======*/\nexport const requestActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\n/*   ====== MOVIE REVIEWS ======*/\nexport const requestReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: 10px;\n  margin-right: 94px;\n  gap: 10px;\n\n  @media (max-width: 1220px) {\n    margin-left: -28px;\n    margin-top: -153px;\n    transform: scale(0.8);\n  }\n`;\n\nexport const NameFilms = styled.p`\n  position: absolute;\n  font-size: 15px;\n  background-color: var(--tmdbNameTitle);\n  color: white;\n  text-align: center;\n  margin-left: 7px;\n  margin-top: 5px;\n  font-family: 'Courgette';\n\n  @media (min-width: 122px) {\n    width: 107px;\n    text-align: center;\n    font-size: 10px;\n    font-weight: 500;\n  }\n\n  @media (min-width: 1288px) {\n    width: 106px;\n    font-weight: 500;\n  }\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n\n  &:hover {\n    transform: scale(0.9);\n    transition: transform 850ms;\n\n    & ${NameFilms} {\n      display: none;\n    }\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #191d1e;\n\n  &:hover {\n    color: #ffffff;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport dayjs from 'dayjs';\nimport { List, Item, MovieLink, NameFilms } from './ListFilms.styled';\n\n/*   ====== DESTRUCTURIZATION  ======*/\nconst defaultImg =\n  'https://t4.ftcdn.net/jpg/04/73/25/49/360_F_473254957_bxG9yf4ly7OBO5I0O5KABlN930GwaMQz.jpg';\nconst posterFilms = 'https://image.tmdb.org/t/p/w500';\n\nconst ListFilms = ({ films }) => {\n  const location = useLocation();\n\n  /*   ====== RENDER ======*/\n  return (\n    <section>\n      <List>\n        {films.map(({ id, title, poster_path, release_date }) => (\n          <Item key={id}>\n            <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n              <NameFilms>\n                {title} (\n                {dayjs(release_date).format('DD. MM. YYYY') || 'No date found'})\n              </NameFilms>\n              <img\n                src={poster_path ? `${posterFilms}${poster_path}` : defaultImg}\n                alt={title}\n                width=\"120px\"\n                height=\"180px\"\n              />\n            </MovieLink>\n          </Item>\n        ))}\n      </List>\n    </section>\n  );\n};\n\nexport default ListFilms;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  margin: 32px;\n  gap: 11px;\n  align-items: flex-start;\n  margin-top: 100px;\n\n  @media (max-width: 1220px) {\n    margin-top: 201px;\n    margin-left: -371px;\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport const List = styled.ul`\n  gap: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n`;\n\nexport const ListInfo = styled.ul`\n  display: flex;\n  flex-direction: row;\n  gap: 50px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const LinkInfo = styled(Link)`\n  text-decoration: none;\n  font-weight: 400;\n  font-size: 18px;\n  color: var(--tmdbRed);\n  font-family: 'Marck Script';\n\n  &:hover {\n    transform: scale(1, 2);\n    transition: transform 350ms;\n  }\n`;\nexport const ActorsFilms = styled.li`\n  display: flex;\n`;\n\nexport const TextOverview = styled.p`\n  color: var(--tmdbRed);\n  max-width: 199px;\n  font-family: 'Marck Script';\n  font-size: 18px;\n`;\n\nexport const ButtonLink = styled.li`\n  position: fixed;\n  left: 19px;\n  font-weight: 500;\n  font-size: 22px;\n  color: var(--tmdbLightGreen);\n  cursor: pointer;\n  list-style-type: none;\n  top: 135px;\n\n  @media (max-width: 540px) {\n    top: 348px;\n  }\n\n  &:hover {\n    color: var(--tmdbRed);\n  }\n`;\n\nexport const ContMovieDetails = styled.div`\n  margin-top: 120px;\n`;\n\nexport const NameFilms = styled.h2`\n  color: var(--tmdbRed);\n`;\n\nexport const NameDetailsMovie = styled.h3`\n  color: var(--tmdbRed);\n  font-size: 15px;\n  font-family: 'Marck Script';\n  font-size: 20px;\n  animation: tracking-in-expand 700ms cubic-bezier(0.215, 0.61, 0.355, 1) 700ms\n    both;\n`;\n\nexport const UserCont = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-top: -15px;\n`;\n\nexport const Title = styled.h1`\n  color: var(--tmdbRed);\n  margin-top: -94px;\n  margin-left: -440px;\n  font-size: 44px;\n  max-width: 600px;\n  font-family: 'Courgette';\n  animation: tracking-in-expand 700ms cubic-bezier(0.215, 0.61, 0.355, 1) 700ms\n    both;\n\n  @media (max-width: 1220px) {\n    margin-top: 52px;\n    margin-left: 0;\n    display: flex;\n    flex-direction: column;\n    animation: tracking-in-expand 700ms cubic-bezier(0.215, 0.61, 0.355, 1)\n      700ms both;\n  }\n`;\n\nexport const Img = styled.img`\n  border: thick double var(--tmdbLightGreen);\n  width: 417px;\n  margin-top: 126px;\n\n  @media (max-width: 1220px) {\n    width: 282px;\n  }\n`;\n\nexport const NameDescription = styled.p`\n  color: var(--tmdbRed);\n  font-size: 17px;\n  animation: tracking-in-expand 700ms cubic-bezier(0.215, 0.61, 0.355, 1) 700ms\n    both;\n\n  @media (max-width: 1220px) {\n    width: 361px;\n  }\n`;\n","import styled from 'styled-components';\nimport { IoSearch } from 'react-icons/io5';\n\nexport const FormContainer = styled.form`\n  display: flex;\n  margin-top: 238px;\n  margin-left: -219px;\n\n  @media (min-width: 1220px) {\n    margin-top: 119px;\n    margin-left: -327px;\n  }\n`;\n\nexport const Input = styled.input`\n  padding: 7px 44px;\n  border: 2px solid var(--tmdbDarkGrey);\n  font-weight: 600;\n  font-size: 20px;\n  margin-top: 24px;\n  margin-left: -46px;\n  margin-right: 10px;\n  border-radius: 4px 8px;\n  outline: none;\n\n  @media (max-width: 1220px) {\n    padding: 7px 39px;\n    margin-top: 42px;\n    margin-left: -31px;\n    width: 88px;\n  }\n\n  &::placeholder {\n    font-family: 'Courgette';\n    font-size: 14px;\n  }\n\n  &:hover {\n    color: var(--tmdbLightBlue);\n    border: 2px solid var(--tmdbLightBlue);\n  }\n\n  &:focus {\n    color: var(--tmdbLightBlue);\n  }\n`;\n\nexport const Search = styled(IoSearch)`\n  scale: 1.5;\n\n  &:hover {\n    color: var(--tmdbLightBlue);\n  }\n\n  &:focus {\n    color: var(--tmdbLightBlue);\n  }\n`;\n\nexport const BtnSearch = styled.button`\n  position: relative;\n  top: 29px;\n  left: -14px;\n  background-color: var(--tmdbWhite);\n  border: none;\n  width: 24px;\n  height: 32px;\n  color: var(--tmdbDarkGrey);\n  cursor: pointer;\n\n  @media (max-width: 1220px) {\n    position: relative;\n    top: 46px;\n    left: 0;\n  }\n`;\n","import { FormContainer, Input, Search, BtnSearch } from './Form.styled';\nimport toast from 'react-hot-toast';\n\nconst Form = ({ submitQuery }) => {\n  const onFormSubmit = evt => {\n    evt.preventDefault();\n    const inputValue = evt.target.elements.query.value.trim();\n    if (!inputValue) {\n      return toast.error('Enter request');\n    }\n    submitQuery(inputValue);\n  };\n\n  /*   ====== RENDER ======*/\n  return (\n    <FormContainer onSubmit={onFormSubmit}>\n      <BtnSearch type=\"submit\">\n        <Search />\n      </BtnSearch>\n      <Input\n        name=\"query\"\n        type=\"text\"\n        autoComplete=\"off\"\n        placeholder=\"Search films...\"\n      />\n    </FormContainer>\n  );\n};\n\nexport default Form;\n","import styled from 'styled-components';\n\nexport const NoFilms = styled.p`\n  margin-top: 2px;\n  margin-left: -282px;\n  color: var(--tmdbRed);\n  font-family: 'Courgette';\n  animation: tracking-in-expand 700ms cubic-bezier(0.215, 0.61, 0.355, 1) 500ms\n    both;\n\n  @media (max-width: 1220px) {\n    margin-left: -218px;\n  }\n\n  @keyframes tracking-in-expand {\n    8% {\n      letter-spacing: -0.5em;\n      opacity: 0;\n    }\n\n    40% {\n      opacity: 0.6;\n    }\n\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const ButtonLink = styled.button`\n  position: fixed;\n  &:hover {\n    color: var(--tmdbRed);\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { TbArrowBigLeftLine } from 'react-icons/tb';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport ListFilms from 'components/ListFilms/ListFilms';\nimport Form from 'components/Form/Form';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { requestSearch } from 'components/Api/Api';\nimport { ButtonLink } from 'pages/MovieDetails/MovieDetails.styled';\nimport { NoFilms } from './Movies.styled';\n\nconst Movies = () => {\n  /*   ====== HOOKS ======*/\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [emptyPage, setEmptyPage] = useState(false);\n\n  const location = useLocation();\n  const query = searchParams.get('query');\n\n  /*   ====== FETCH REQUEST ======*/\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const effectAction = async () => {\n      try {\n        setLoading(true);\n        const data = await requestSearch(query);\n        setMovies(data);\n\n        setEmptyPage(() => {\n          if (data.length === 0) {\n            return true;\n          }\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    effectAction();\n  }, [query]);\n\n  const submitRequest = value => {\n    setSearchParams({ query: value });\n  };\n\n  /*   ====== RENDER ======*/\n  return (\n    <div>\n      <Form submitQuery={submitRequest} />\n\n      <Link to={location.state?.from ?? '/'}>\n        <ButtonLink type=\"button\">\n          <TbArrowBigLeftLine size={50} />\n        </ButtonLink>\n      </Link>\n\n      {loading ?? <Loader />}\n      {movies.length > 0 && <ListFilms films={movies} />}\n      {emptyPage && <NoFilms>No films, enter your request</NoFilms>}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","API_KEY","requestTrending","response","data","results","requestSearch","query","requestMovieDetails","movieId","requestActors","cast","requestReviews","List","styled","NameFilms","Item","MovieLink","Link","films","location","useLocation","map","id","title","poster_path","release_date","to","state","from","dayjs","format","src","alt","width","height","Container","ListInfo","LinkInfo","ActorsFilms","TextOverview","ButtonLink","ContMovieDetails","NameDetailsMovie","UserCont","Title","Img","NameDescription","FormContainer","Input","Search","IoSearch","BtnSearch","submitQuery","onSubmit","evt","preventDefault","inputValue","target","elements","value","trim","toast","type","name","autoComplete","placeholder","NoFilms","useSearchParams","searchParams","setSearchParams","useState","loading","setLoading","movies","setMovies","emptyPage","setEmptyPage","get","useEffect","effectAction","length","console","log","size","Loader","ListFilms"],"sourceRoot":""}