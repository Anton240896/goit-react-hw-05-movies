{"version":3,"file":"static/js/436.aa7833f7.chunk.js","mappings":"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","sources":["components/Api/Api.jsx","components/ListFilms/ListFilms.styled.js","components/ListFilms/ListFilms.jsx","pages/MovieDetails/MovieDetails.styled.js","components/Form/Form.styled.js","components/Form/Form.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n/*   ====== KEY API ======*/\n\nconst API_KEY = '992758a4802a699e8df27d4d6efc34fb';\n\n/*   ====== REQUEST API ASYNC FUNCTION ⬇️  ======*/\n\n/*   ====== TREND MOVIES FOR TODAY ======*/\nexport const requestTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\n/*   ====== SEARCH MOVIES ======*/\nexport const requestSearch = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n};\n\n/*   ====== MOVIE ======*/\nexport const requestMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\n/*   ====== MOVIE ACTORS ======*/\nexport const requestActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\n/*   ====== MOVIE REVIEWS ======*/\nexport const requestReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style-type: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  animation: tracking-in-expand 700ms cubic-bezier(0.215, 0.61, 0.355, 1) 700ms\n    both;\n`;\n\nexport const NameFilms = styled.p`\n  position: absolute;\n  font-size: 15px;\n  background-color: #71d41775;\n  color: white;\n  font-weight: 500;\n  margin-left: 6px;\n  margin-top: 5px;\n  font-family: 'Courgette';\n\n  @media (min-width: 122px) {\n    width: 138px;\n    font-size: 10px;\n  }\n\n  @media (min-width: 1288px) {\n    width: 138px;\n    font-size: 15px;\n    font-weight: 500;\n  }\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n\n  &:hover {\n    transform: scale(0.9);\n    transition: transform 850ms;\n\n    & ${NameFilms} {\n      display: none;\n    }\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #191d1e;\n\n  &:hover {\n    color: #ffffff;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { List, Item, MovieLink, NameFilms } from './ListFilms.styled';\n\n/*   ====== DESTRUCTURIZATION  ======*/\nconst defaultImg =\n  'https://t4.ftcdn.net/jpg/04/73/25/49/360_F_473254957_bxG9yf4ly7OBO5I0O5KABlN930GwaMQz.jpg';\nconst posterFilms = 'https://image.tmdb.org/t/p/w500';\n\n/*   ====== HOOKS ======*/\nconst ListFilms = ({ films }) => {\n  const location = useLocation();\n\n  /*   ====== RENDER ======*/\n  return (\n    <section>\n      <List>\n        {films.map(({ id, title, poster_path, release_date }) => (\n          <Item key={id}>\n            <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n              <NameFilms>\n                {title}, {release_date.slice(0, 4)}\n              </NameFilms>\n              <img\n                src={poster_path ? `${posterFilms}${poster_path}` : defaultImg}\n                alt={title}\n                width=\"150px\"\n                height=\"220px\"\n              />\n            </MovieLink>\n          </Item>\n        ))}\n      </List>\n    </section>\n  );\n};\n\nexport default ListFilms;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  margin: 32px;\n  gap: 11px;\n  align-items: flex-start;\n  margin-top: 100px;\n\n  @media (max-width: 1220px) {\n    margin-top: 201px;\n    margin-left: -218px;\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport const List = styled.ul`\n  gap: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n`;\n\nexport const ListInfo = styled.ul`\n  display: flex;\n  flex-direction: row;\n  gap: 50px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const LinkInfo = styled(Link)`\n  text-decoration: none;\n  font-weight: 400;\n  font-size: 18px;\n  color: red;\n  font-family: 'Marck Script';\n\n  &:hover {\n    transform: scale(1, 2);\n    transition: transform 350ms;\n  }\n`;\nexport const ActorsFilms = styled.li`\n  display: flex;\n`;\n\nexport const TextOverview = styled.p`\n  max-width: 227px;\n  color: red;\n  font-family: 'Marck Script';\n  font-size: 18px;\n`;\n\nexport const ButtonLink = styled.li`\n  position: fixed;\n  left: 19px;\n  font-weight: 500;\n  font-size: 22px;\n  color: yellowgreen;\n  cursor: pointer;\n  list-style-type: none;\n  top: 135px;\n\n  @media (max-width: 540px) {\n    top: 139px;\n  }\n\n  &:hover {\n    color: red;\n  }\n`;\n\nexport const ContMovieDetails = styled.div`\n  margin-top: -2px;\n`;\n\nexport const NameFilms = styled.h2`\n  color: red;\n  /* animation: tracking-in-expand 700ms cubic-bezier(0.215, 0.61, 0.355, 1) 700ms\n    both; */\n`;\n\nexport const NameDetailsMovie = styled.h3`\n  color: red;\n  font-size: 15px;\n  font-family: 'Marck Script';\n  font-size: 20px;\n  animation: tracking-in-expand 700ms cubic-bezier(0.215, 0.61, 0.355, 1) 700ms\n    both;\n`;\n\nexport const UserCont = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-top: -22px;\n`;\n\nexport const ReleaseText = styled.p`\n  font-size: 25px;\n  color: red;\n  animation: tracking-in-expand 700ms cubic-bezier(0.215, 0.61, 0.355, 1) 700ms\n    both;\n`;\n\nexport const Title = styled.h1`\n  color: red;\n  margin-top: -81px;\n  margin-left: -414px;\n  font-size: 35px;\n  max-width: 600px;\n  font-family: 'Courgette';\n  animation: tracking-in-expand 700ms cubic-bezier(0.215, 0.61, 0.355, 1) 700ms\n    both;\n\n  @media (max-width: 1220px) {\n    margin-top: 52px;\n    margin-left: 0;\n    display: flex;\n    flex-direction: column;\n    animation: tracking-in-expand 700ms cubic-bezier(0.215, 0.61, 0.355, 1)\n      700ms both;\n  }\n`;\n\nexport const Img = styled.img`\n  border: thick double red;\n  border-color: yellowgreen;\n  width: 400px;\n`;\n\nexport const NameDescription = styled.p`\n  color: red;\n  font-size: 17px;\n  animation: tracking-in-expand 700ms cubic-bezier(0.215, 0.61, 0.355, 1) 700ms\n    both;\n`;\n","import styled from 'styled-components';\n\nexport const FormBox = styled.form`\n  display: flex;\n  margin-top: 238px;\n  margin-left: -219px;\n\n  @media (min-width: 1220px) {\n    margin-top: 119px;\n    margin-left: -327px;\n  }\n`;\n\nexport const Input = styled.input`\n  padding: 10px 15px;\n  border: 2px solid #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  margin-right: 10px;\n  border-radius: 4px 8px;\n  outline: none;\n\n  &:hover {\n    color: yellowgreen;\n    border: 2px solid yellowgreen;\n  }\n`;\n","import { FormBox, Input } from './Form.styled';\nimport toast from 'react-hot-toast';\n\nconst Form = ({ submitAction, startInputText }) => {\n  const onFormSubmit = evt => {\n    evt.preventDefault();\n    const inputValue = evt.target.elements.query.value.trim();\n    if (!inputValue) {\n      return toast.error('Sorry, nothing found');\n    }\n    submitAction(inputValue);\n  };\n\n  return (\n    <FormBox onSubmit={onFormSubmit}>\n      <Input\n        defaultValue={startInputText}\n        name=\"query\"\n        type=\"text\"\n        autoComplete=\"off\"\n        placeholder=\"Search films...\"\n      />\n    </FormBox>\n  );\n};\n\nexport default Form;\n","import styled from 'styled-components';\n\nexport const NotFilms = styled.p`\n  margin-top: -28px;\n  margin-left: -282px;\n  color: red;\n  font-family: 'Courgette';\n  animation: tracking-in-expand 700ms cubic-bezier(0.215, 0.61, 0.355, 1) 500ms\n    both;\n\n  @media (max-width: 1220px) {\n    margin-left: -218px;\n  }\n\n  @keyframes tracking-in-expand {\n    8% {\n      letter-spacing: -0.5em;\n      opacity: 0;\n    }\n\n    40% {\n      opacity: 0.6;\n    }\n\n    100% {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const ButtonLink = styled.button`\n  position: fixed;\n  &:hover {\n    color: red;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { TbArrowBigLeftLine } from 'react-icons/tb';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport ListFilms from 'components/ListFilms/ListFilms';\nimport Form from 'components/Form/Form';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { requestSearch } from 'components/Api/Api';\nimport { ButtonLink } from 'pages/MovieDetails/MovieDetails.styled';\nimport { NotFilms } from './Movies.styled';\n\nimport toast from 'react-hot-toast';\n\n/*   ====== HOOKS ======*/\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  // const [btnLoadMore, setBtnLoadMore] = useState(false);\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  /*   ====== FETCH REQUEST ======*/\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const effectAction = async () => {\n      try {\n        setLoading(true);\n        const data = await requestSearch(query);\n        setMovies(data);\n      } catch (error) {\n        toast.error('Sorry, nothing found');\n      }\n    };\n    effectAction();\n  }, [query]);\n\n  const submitAction = value => {\n    setSearchParams({ query: value });\n  };\n\n  /*   ====== RENDER ======*/\n  return (\n    <div>\n      <Form submitAction={submitAction} startInputText={query} />\n\n      <Link to={location.state?.from ?? '/'}>\n        <ButtonLink type=\"button\">\n          <TbArrowBigLeftLine size={50} />\n        </ButtonLink>\n      </Link>\n\n      {loading ?? <Loader />}\n\n      <ListFilms films={movies} />\n\n      {movies.length === 0 && <NotFilms>No films, enter your request</NotFilms>}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","API_KEY","requestTrending","response","data","results","requestSearch","query","requestMovieDetails","movieId","requestActors","cast","requestReviews","List","styled","NameFilms","Item","MovieLink","Link","films","location","useLocation","map","id","title","poster_path","release_date","to","state","from","slice","src","alt","width","height","Container","ListInfo","LinkInfo","ActorsFilms","TextOverview","ButtonLink","ContMovieDetails","NameDetailsMovie","UserCont","ReleaseText","Title","Img","NameDescription","FormBox","Input","submitAction","startInputText","onSubmit","evt","preventDefault","inputValue","target","elements","value","trim","toast","defaultValue","name","type","autoComplete","placeholder","NotFilms","useSearchParams","searchParams","setSearchParams","useState","loading","setLoading","movies","setMovies","get","useEffect","effectAction","size","Loader","ListFilms","length"],"sourceRoot":""}