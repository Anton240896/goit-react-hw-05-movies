{"version":3,"file":"static/js/504.d49253ce.chunk.js","mappings":"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","sources":["components/Api/Api.jsx","components/Trailer/Trailer.styled.js","components/Trailer/Trailer.jsx","pages/MovieDetails/MovieDetails.jsx","pages/MovieDetails/MovieDetails.styled.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n/*   ====== KEY API ======*/\n\nconst API_KEY = '992758a4802a699e8df27d4d6efc34fb';\n\n/*   ====== REQUEST API ASYNC FUNCTION ⬇️  ======*/\n\n/*   ====== TREND MOVIES FOR TODAY ======*/\nexport const requestTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\n/*   ====== SEARCH MOVIES ======*/\nexport const requestSearch = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n};\n\n/*   ====== MOVIE ======*/\nexport const requestMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\n/*   ====== MOVIE ACTORS ======*/\nexport const requestActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\n/*   ====== MOVIE REVIEWS ======*/\nexport const requestReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\n/*   ====== MOVIE TRAILER ======*/\nexport const requestTrailer = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/videos?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","import styled from 'styled-components';\nimport { FaYoutube } from 'react-icons/fa';\nimport ReactModal from 'react-modal';\n\nexport const OverlayModal = styled(ReactModal)`\n  position: relative;\n  top: 50%;\n  right: auto;\n  bottom: auto;\n  left: 50%;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\n  padding: 0%;\n  z-index: 1000;\n`;\n\nexport const ContTrailer = styled.div`\n  position: relative;\n  top: 19px;\n\n  @media (max-width: 1220px) {\n    margin-top: 0;\n    margin-left: -223px;\n  }\n`;\n\nexport const Frame = styled.iframe`\n  margin-left: 520px;\n  width: 50%;\n  height: 500px;\n  border: thick double var(--tmdbLightGreen);\n  border-radius: 10px;\n\n  &:focus {\n    outline: none;\n  }\n\n  @media (max-width: 1220px) {\n    width: 273px;\n  }\n`;\n\n export const BtnTrailer = styled(FaYoutube)`\n   cursor: pointer;\n   color: var(--tmdbRed);\n `;","import { useState, useEffect } from 'react';\n\nimport { requestTrailer } from 'components/Api/Api';\nimport { ContTrailer, Frame, BtnTrailer, OverlayModal } from './Trailer.styled';\nimport { Loader } from 'components/Loader/Loader';\n\nimport toast from 'react-hot-toast';\n\n  /*   ====== HOOKS ======*/\nexport const MovieTrailer = ({ movieId }) => {\n  const [trailer, setTrailer] = useState();\n  const [loading, setLoading] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n    /*   ====== OPEN-CLOSE MODAL ======*/\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n\n  /*   ====== EFFECT-TRAILER ======*/\n  useEffect(() => {\n    async function getMovieTrailer() {\n      try {\n        setLoading(true);\n        const data = await requestTrailer(movieId);\n\n        if (data.length > 0) {\n          setTrailer(data[0].key);\n        }\n      } catch (error) {\n        toast.error('Nothing found');\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovieTrailer();\n  }, [movieId]);\n\n    /*   ====== RENDER ======*/\n  return (\n    <>\n      <BtnTrailer size={120} onClick={openModal} />\n      <OverlayModal isOpen={isModalOpen} onRequestClose={closeModal}>\n        <ContTrailer>\n          {trailer && (\n            <Frame src={`https://www.youtube.com/embed/${trailer}`} allowFullScreen></Frame>\n          )}\n          {loading && <Loader />}\n        </ContTrailer>\n      </OverlayModal>\n    </>\n  );\n};","import { useEffect, useState, useRef } from 'react';\nimport { useParams, Outlet, Link, useLocation } from 'react-router-dom';\n\nimport dayjs from 'dayjs';\nimport toast from 'react-hot-toast';\n\nimport { TbArrowBigLeftLine } from 'react-icons/tb';\n\nimport { requestMovieDetails } from 'components/Api/Api';\nimport { MovieTrailer } from 'components/Trailer/Trailer';\nimport Loader from 'components/Loader/Loader';\nimport {\n  Container,\n  List,\n  ListInfo,\n  LinkInfo,\n  ActorsFilms,\n  TextOverview,\n  ButtonLink,\n  ContMovieDetails,\n  NameDetailsMovie,\n  UserCont,\n  Title,\n  Img,\n  NameDescription,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  /*   ====== HOOKS ======*/\n  const { movieId } = useParams();\n  const [error, setError] = useState(false);\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const backCurrentPage = useRef(location.state?.from || '/movies');\n\n  /*   ====== FETCH REQUEST USING \"TRY\" & \"CATCH\" ======*/\n  useEffect(() => {\n    async function getMovieDetailsFilms() {\n      try {\n        setError(false);\n        setLoading(true);\n        const data = await requestMovieDetails(movieId);\n        setMovieDetails(data);\n      } catch (error) {\n        toast.error('Nothing found');\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovieDetailsFilms();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return;\n  }\n\n  /*   ====== CONVERT MINUTES TO HOURS  ======*/\n  function getHoursWithMins(mins) {\n    let hours = Math.floor(mins / 60);\n    let minutes = mins % 60;\n\n    if (hours === 0) {\n      return minutes + 'm';\n    }\n\n    if (minutes === 0) {\n      return hours + 'h';\n    }\n\n    return ` ${hours}h ${minutes}m `;\n  }\n\n  /*   ====== DESTRUCTURIZATION  ======*/\n  const {\n    title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n    runtime,\n  } = movieDetails;\n\n  /*   ====== DESTRUCTURIZATION - POSTER FILMS ======*/\n  const posterFilms = 'https://image.tmdb.org/t/p/w500';\n\n  /*   ====== DESTRUCTURIZATION - DEFAULT NO IMAGE  ======*/\n  const defaultNoImages =\n    'https://st4.depositphotos.com/14953852/22772/v/450/depositphotos_227725020-stock-illustration-image-available-icon-flat-vector.jpg';\n\n  /*   ====== DESTRUCTURIZATION - TITLE  ======*/\n  const nameTitle = release_date.slice(0, 4) || 'No date found';\n\n  /*   ====== DESTRUCTURIZATION - RELEASE DATE  ======*/\n  const releaseDate =\n    release_date.length === 0 ? (\n      'No date found'\n    ) : (\n      <TextOverview>{dayjs(release_date).format('DD/ MM/ YYYY')}</TextOverview>\n    );\n\n  /*   ====== DESTRUCTURIZATION - OVERVIEW  ======*/\n  const overviewText =\n    overview.length === 0 ? (\n      'No plot found'\n    ) : (\n      <b>\n        <NameDescription>{overview}</NameDescription>\n      </b>\n    );\n\n  /*   ====== DESTRUCTURIZATION - RUN TIME  ======*/\n  const runTime =\n    runtime > 0 ? (\n      <TextOverview>{getHoursWithMins(runtime)} (duration)</TextOverview>\n    ) : (\n      'No time found'\n    );\n\n  /*   ====== DESTRUCTURIZATION - USER SCORE  ======*/\n  const userScore =\n    vote_average > 0 ? (\n      <TextOverview>\n        {/* {vote_average.toFixed(1)} (average vote) */}\n        {Math.round(vote_average * 10)} % (average vote)\n      </TextOverview>\n    ) : (\n      'No rating found'\n    );\n\n  /*   ====== DESTRUCTURIZATION - GENRES  ======*/\n  const genresFilms =\n    genres.length > 0 ? (\n      <TextOverview>{genres.map(genre => genre.name).join(' / ')}</TextOverview>\n    ) : (\n      'No genres found'\n    );\n\n  /*   ====== RENDER ======*/\n  return (\n    <main>\n      {\n        <Container>\n          <div>\n            <Img\n              src={\n                poster_path\n                  ? `${posterFilms}${poster_path}`\n                  : `${defaultNoImages}`\n              }\n              alt={original_title}\n            />\n          </div>\n\n          <ContMovieDetails>\n            <UserCont>\n              <Title>\n                <b>\n                  {title} ({nameTitle})\n                </b>\n              </Title>\n            </UserCont>\n\n            <MovieTrailer movieId={movieId} />\n\n            <UserCont>\n              <NameDetailsMovie>Release Date •</NameDetailsMovie>\n\n              <TextOverview>{releaseDate}</TextOverview>\n            </UserCont>\n\n            <NameDetailsMovie>\n              <b>Overview •</b>\n            </NameDetailsMovie>\n\n            <TextOverview>{overviewText}</TextOverview>\n\n            <UserCont>\n              <NameDetailsMovie>Run time •</NameDetailsMovie>\n\n              <TextOverview>{runTime}</TextOverview>\n            </UserCont>\n\n            <UserCont>\n              <NameDetailsMovie>User score •</NameDetailsMovie>\n\n              <TextOverview>{userScore}</TextOverview>\n            </UserCont>\n\n            <UserCont>\n              <NameDetailsMovie>Genres •</NameDetailsMovie>\n\n              <TextOverview>{genresFilms}</TextOverview>\n            </UserCont>\n\n            <UserCont>\n              <NameDetailsMovie>\n                <b>Additonal information •</b>\n              </NameDetailsMovie>\n            </UserCont>\n\n            <List>\n              <div>\n                <ListInfo>\n                  <LinkInfo to=\"cast\">Actors •</LinkInfo>\n\n                  <ActorsFilms>\n                    <LinkInfo to=\"reviews\">Reviews •</LinkInfo>\n                  </ActorsFilms>\n                </ListInfo>\n                <Outlet />\n              </div>\n            </List>\n          </ContMovieDetails>\n\n          <Link to={backCurrentPage.current}>\n            <ButtonLink type=\"button\">\n              <TbArrowBigLeftLine\n                size={50}\n                style={{\n                  position: 'fixed',\n                  top: '193px',\n                  left: '0',\n                }}\n              />\n            </ButtonLink>\n          </Link>\n\n          {loading && <Loader />}\n          {error && toast.error(`Sorry,we didnt find anything`)}\n        </Container>\n      }\n    </main>\n  );\n};\n\nexport default MovieDetails;\n\n//        USE EFFECT \"USING THEN & CATCH\"\n// useEffect(() => {\n//   const getMovieDetailsFilms = () => {\n//     setLoading(true);\n\n//     requestMovieDetails(movieId)\n//       .then(detailMovie => {np\n//         setMovieInfo(detailMovie);\n//       })\n//       .catch(error => {})\n//       .finally(() => {\n//         setLoading(false);\n//       });\n//   };\n\n//   getMovieDetailsFilms();\n// }, [movieId]);\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  margin: 32px;\n  gap: 11px;\n  align-items: flex-start;\n  margin-top: 100px;\n\n  @media (max-width: 1220px) {\n    margin-top: 201px;\n    margin-left: -371px;\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport const List = styled.ul`\n  gap: 12px;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const ListInfo = styled.li`\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  gap: 50px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const LinkInfo = styled(Link)`\n  text-decoration: none;\n  font-weight: 400;\n  font-size: 18px;\n  color: var(--tmdbRed);\n  font-family: 'Marck Script';\n\n  &:hover {\n    transform: scale(1, 2);\n    transition: transform 350ms;\n  }\n`;\nexport const ActorsFilms = styled.li`\n  display: flex;\n`;\n\nexport const TextOverview = styled.p`\n  color: var(--tmdbRed);\n  max-width: 199px;\n  font-family: 'Marck Script';\n  font-size: 18px;\n`;\n\nexport const ButtonLink = styled.li`\n  position: fixed;\n  left: 19px;\n  font-weight: 500;\n  font-size: 22px;\n  color: var(--tmdbLightGreen);\n  cursor: pointer;\n  list-style-type: none;\n  top: 135px;\n\n  @media (max-width: 540px) {\n    top: 348px;\n  }\n\n  &:hover {\n    color: var(--tmdbRed);\n  }\n`;\n\nexport const ContMovieDetails = styled.div`\n  margin-top: 120px;\n\n  @media (max-width: 1220px) {\n    margin-top: -37px;\n  }\n`;\n\nexport const NameFilms = styled.h2`\n  color: var(--tmdbRed);\n`;\n\nexport const NameDetailsMovie = styled.h3`\n  color: var(--tmdbRed);\n  font-size: 15px;\n  font-family: 'Marck Script';\n  font-size: 20px;\n  animation: tracking-in-expand 700ms cubic-bezier(0.215, 0.61, 0.355, 1) 700ms\n    both;\n`;\n\nexport const UserCont = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-top: -15px;\n`;\n\nexport const Title = styled.h1`\n  color: var(--tmdbRed);\n  margin-top: -94px;\n  margin-left: -440px;\n  font-size: 44px;\n  max-width: 600px;\n  font-family: 'Courgette';\n  animation: tracking-in-expand 700ms cubic-bezier(0.215, 0.61, 0.355, 1) 700ms\n    both;\n\n  @media (max-width: 1220px) {\n    margin-top: 52px;\n    margin-left: 0;\n    display: flex;\n    flex-direction: column;\n    animation: tracking-in-expand 700ms cubic-bezier(0.215, 0.61, 0.355, 1)\n      700ms both;\n  }\n`;\n\nexport const Img = styled.img`\n  border: thick double var(--tmdbLightGreen);\n  width: 417px;\n  height: 789px;\n  margin-top: 126px;\n\n  @media (max-width: 1220px) {\n    width: 266px;\n    height: 386px;\n  }\n`;\n\nexport const NameDescription = styled.p`\n  color: var(--tmdbRed);\n  font-size: 17px;\n  animation: tracking-in-expand 700ms cubic-bezier(0.215, 0.61, 0.355, 1) 700ms\n    both;\n\n  @media (max-width: 1220px) {\n    width: 361px;\n  }\n`;\n"],"names":["axios","API_KEY","requestTrending","response","data","results","requestSearch","query","requestMovieDetails","movieId","requestActors","cast","requestReviews","requestTrailer","OverlayModal","styled","ReactModal","ContTrailer","Frame","BtnTrailer","FaYoutube","MovieTrailer","useState","trailer","setTrailer","loading","setLoading","isModalOpen","setIsModalOpen","useEffect","length","key","toast","getMovieTrailer","size","onClick","isOpen","onRequestClose","src","allowFullScreen","Loader","useParams","error","setError","movieDetails","setMovieDetails","location","useLocation","backCurrentPage","useRef","state","from","getMovieDetailsFilms","title","release_date","vote_average","overview","genres","poster_path","original_title","runtime","nameTitle","slice","releaseDate","dayjs","format","overviewText","runTime","mins","hours","Math","floor","minutes","getHoursWithMins","userScore","round","genresFilms","map","genre","name","join","alt","to","current","type","style","position","top","left","Container","List","ListInfo","LinkInfo","Link","ActorsFilms","TextOverview","ButtonLink","ContMovieDetails","NameDetailsMovie","UserCont","Title","Img","NameDescription"],"sourceRoot":""}