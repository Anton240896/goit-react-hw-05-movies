{"version":3,"file":"static/js/779.ee3bafb8.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAIzB,IAAMC,EAAU,mCAKHC,EAAe,mCAAG,oGACNF,EAAAA,EAAAA,IAAA,qCAAwCC,IADlC,cACvBE,EADuB,yBAEtBA,EAASC,KAAKC,SAFQ,2CAAH,qDAMfC,EAAa,mCAAG,WAAMC,GAAN,uFACJP,EAAAA,EAAAA,IAAA,+BACGC,EADH,4DAC8DM,IAF1D,cACrBJ,EADqB,yBAIpBA,EAASC,KAAKC,SAJM,2CAAH,sDAQbG,EAAmB,mCAAG,WAAMC,GAAN,uFACVT,EAAAA,EAAAA,IAAA,gBACZS,EADY,oBACOR,EADP,oBADU,cAC3BE,EAD2B,yBAI1BA,EAASC,MAJiB,2CAAH,sDAQnBM,EAAa,mCAAG,WAAMD,GAAN,uFACJT,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACeR,EADf,oBADI,cACrBE,EADqB,yBAIpBA,EAASC,KAAKO,MAJM,2CAAH,sDAQbC,EAAc,mCAAG,WAAMH,GAAN,uFACLT,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACeR,EADf,2BADK,cACtBE,EADsB,yBAIrBA,EAASC,KAAKC,SAJO,2CAAH,qD,0ICvCdQ,EAAmBC,EAAAA,GAAAA,GAAH,sEAKhBC,EAAaD,EAAAA,GAAAA,GAAH,6C,iBCuDvB,EAnDgB,WACd,IAAQL,GAAYO,EAAAA,EAAAA,MAAZP,QACR,GAA8BQ,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAuBA,OAnBAC,EAAAA,EAAAA,YAAU,WAENH,GAAW,IAEXP,EAAAA,EAAAA,IAAeH,GACZc,MAAK,SAAAC,GACJH,EAAWG,EACZ,IACAC,OAAM,SAAAC,GACLC,EAAAA,GAAAA,MAAY,wCACb,IACAC,SAAQ,WACPT,GAAW,EACZ,GAGN,GAAE,CAACV,KAIF,2BACGS,IAAW,SAACW,EAAA,EAAD,KACZ,SAAC,KAAD,CAASC,SAAS,cAEjBV,EAAQW,OAAS,GAChB,SAAClB,EAAD,UACGO,EAAQY,KAAI,SAAAC,GACX,OACE,UAAClB,EAAD,YACE,wBAAKkB,EAAOC,UACZ,uBAAID,EAAOE,YAFIF,EAAOC,OAK3B,OAGHP,EAAAA,EAAAA,IAAM,8BAA+B,CACnCS,SAAU,QAKnB,C","sources":["components/Api/Api.jsx","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n/*   ====== KEY API ======*/\n\nconst API_KEY = '992758a4802a699e8df27d4d6efc34fb';\n\n/*   ====== REQUEST API ASYNC FUNCTION ⬇️  ======*/\n\n/*   ====== TREND MOVIES FOR TODAY ======*/\nexport const requestTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\n/*   ====== SEARCH MOVIES ======*/\nexport const requestSearch = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\n/*   ====== MOVIE ======*/\nexport const requestMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\n/*   ====== MOVIE ACTORS ======*/\nexport const requestActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\n/*   ====== MOVIE REVIEWS ======*/\nexport const requestReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\n//ggger45@3@@!wrf\n","import styled from 'styled-components';\n\nexport const UnOrderedReviews = styled.ul`\n  margin-right: 40px;\n  margin-left: -40px;\n`;\n\nexport const ListReview = styled.li`\n  list-style: none;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { requestReviews } from 'components/Api/Api';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  ListReview,\n  UnOrderedReviews,\n} from 'components/Reviews/Reviews.styled';\nimport toast, { Toaster } from 'react-hot-toast';\n\n/*   ====== HOOKS ======*/\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [reviews, setReviews] = useState([]);\n\n  /*   ====== FETCH REQUEST ======*/\n\n  useEffect(() => {\n    const getReviews = () => {\n      setLoading(true);\n\n      requestReviews(movieId)\n        .then(resp => {\n          setReviews(resp);\n        })\n        .catch(error => {\n          toast.error('Sorry, we dint find, please try again');\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n    getReviews();\n  }, [movieId]);\n\n  /*   ====== RENDER ======*/\n  return (\n    <div>\n      {loading && <Loader />}\n      <Toaster position=\"top-right\" />\n\n      {reviews.length > 0 ? (\n        <UnOrderedReviews>\n          {reviews.map(review => {\n            return (\n              <ListReview key={review.author}>\n                <h2>{review.author}</h2>\n                <p>{review.content}</p>\n              </ListReview>\n            );\n          })}\n        </UnOrderedReviews>\n      ) : (\n        toast('Sorry, but we found nothing', {\n          duration: 3000,\n        })\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","API_KEY","requestTrending","response","data","results","requestSearch","keyword","requestMovieDetails","movieId","requestActors","cast","requestReviews","UnOrderedReviews","styled","ListReview","useParams","useState","loading","setLoading","reviews","setReviews","useEffect","then","resp","catch","error","toast","finally","Loader","position","length","map","review","author","content","duration"],"sourceRoot":""}