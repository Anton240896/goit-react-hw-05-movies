{"version":3,"file":"static/js/880.9f913573.chunk.js","mappings":"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","sources":["components/Api/Api.jsx","components/ListFilms/ListFilms.styled.js","components/ListFilms/ListFilms.jsx","pages/MovieDetails/MovieDetails.styled.js","components/Form/Form.styled.js","components/Form/Form.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\n/*   ====== KEY API ======*/\n\nconst API_KEY = '992758a4802a699e8df27d4d6efc34fb';\n\n/*   ====== REQUEST API ASYNC FUNCTION ⬇️  ======*/\n\n/*   ====== TREND MOVIES FOR TODAY ======*/\nexport const requestTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\n/*   ====== SEARCH MOVIES ======*/\nexport const requestSearch = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n};\n\n/*   ====== MOVIE ======*/\nexport const requestMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\n/*   ====== MOVIE ACTORS ======*/\nexport const requestActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\n/*   ====== MOVIE REVIEWS ======*/\nexport const requestReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\n//ggger45@3@@!wrf\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style-type: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const NameFilms = styled.p`\n  position: absolute;\n  width: 10%;\n  font-size: 20px;\n  color: white;\n  font-weight: 500;\n  margin-left: 6px;\n  margin-top: 0;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  background-color: #ff000096;\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n\n  &:hover {\n    transform: scale(1.03);\n    transition: transform 550ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    & ${NameFilms} {\n      top: -200%;\n    }\n  }\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #191d1e;\n\n  &:hover {\n    color: red;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { List, Item, MovieLink, NameFilms } from './ListFilms.styled';\n\nconst defaultImg =\n  'https://t4.ftcdn.net/jpg/04/73/25/49/360_F_473254957_bxG9yf4ly7OBO5I0O5KABlN930GwaMQz.jpg';\nconst posterPath = 'https://image.tmdb.org/t/p/w500';\n\nconst ListFilms = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <section>\n      <List>\n        {films.map(({ id, title, poster_path }) => (\n          <Item key={id}>\n            <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n              <NameFilms> {title}</NameFilms>\n              <img\n                src={poster_path ? `${posterPath}${poster_path}` : defaultImg}\n                alt={title}\n                width=\"150\"\n              />\n            </MovieLink>\n          </Item>\n        ))}\n      </List>\n    </section>\n  );\n};\n\nexport default ListFilms;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  margin: 7px;\n  gap: 11px;\n  align-items: flex-start;\n  margin-top: 113px;\n\n  @media (max-width: 922px) {\n    margin-top: 201px;\n    margin-left: -158px;\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nexport const List = styled.ul`\n  gap: 12px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n`;\n\nexport const ListInfo = styled.ul`\n  display: flex;\n  flex-direction: row;\n  gap: 50px;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport const LinkInfo = styled(Link)`\n  text-decoration: none;\n  font-weight: 400;\n  font-size: 18px;\n  color: red;\n`;\nexport const ActorsFilms = styled.li`\n  display: flex;\n`;\n\nexport const TextOverview = styled.p`\n  max-width: 287px;\n  color: red;\n`;\n\nexport const ButtonLink = styled.li`\n  position: absolute;\n  top: 40px;\n  left: 19px;\n  font-weight: 500;\n  font-size: 22px;\n  color: yellowgreen;\n  cursor: pointer;\n  list-style-type: none;\n\n  @media (max-width: 540px) {\n    top: 139px;\n  }\n\n  &:hover {\n    color: red;\n  }\n`;\n\nexport const ContMovieDetails = styled.div`\n  margin-top: -18px;\n`;\n\nexport const NameFilms = styled.h2`\n  color: red;\n`;\n\nexport const NameDetailsMovie = styled.h3`\n  color: red;\n`;\n\nexport const UserCont = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n","import styled from 'styled-components';\n\nexport const FormBox = styled.form`\n  display: flex;\n  margin-top: 150px;\n  margin-left: -256px;\n`;\n\nexport const Input = styled.input`\n  padding: 10px 15px;\n  border: 2px solid #191d1e;\n  font-weight: 600;\n  font-size: 20px;\n  margin-right: 10px;\n  border-radius: 4px 8px;\n  outline: none;\n\n  &:hover {\n    color: yellowgreen;\n    border: 2px solid yellowgreen;\n  }\n`;\n","import { FormBox, Input } from './Form.styled';\nimport toast from 'react-hot-toast';\n\nconst Form = ({ submitAction, startInputText }) => {\n  const onFormSubmit = evt => {\n    evt.preventDefault();\n    const inputValue = evt.target.elements.query.value.trim();\n    if (!inputValue) {\n      return toast.error('Sorry we didnt find anything');\n    }\n    submitAction(inputValue);\n  };\n\n  return (\n    <FormBox onSubmit={onFormSubmit}>\n      <Input\n        defaultValue={startInputText}\n        name=\"query\"\n        type=\"text\"\n        autoComplete=\"off\"\n        placeholder=\"Search films\"\n      />\n    </FormBox>\n  );\n};\n\nexport default Form;\n","import { useState, useEffect } from 'react';\nimport { Outlet, useSearchParams } from 'react-router-dom';\nimport { TbArrowBigLeftLine } from 'react-icons/tb';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport ListFilms from 'components/ListFilms/ListFilms';\nimport Form from 'components/Form/Form';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { requestSearch } from 'components/Api/Api';\nimport { ButtonLink } from 'pages/MovieDetails/MovieDetails.styled';\n\nimport toast from 'react-hot-toast';\n\n/*   ====== HOOKS ======*/\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const query = searchParams.get('query');\n  const location = useLocation();\n\n  /*   ====== FETCH REQUEST ======*/\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const effectAction = async () => {\n      try {\n        setLoading(true);\n        const data = await requestSearch(query);\n        setMovies(data);\n      } catch (error) {\n        toast.error('Sorry, we didnt find anything');\n      }\n    };\n    effectAction();\n  }, [query]);\n\n  const submitAction = value => {\n    setSearchParams({ query: value });\n  };\n\n  /*   ====== RENDER ======*/\n  return (\n    <div>\n      <Form submitAction={submitAction} startInputText={query} />\n\n      <Link to={location.state?.from ?? '/'}>\n        <ButtonLink type=\"button\">\n          <TbArrowBigLeftLine\n            size={50}\n            style={{\n              color: 'yellowgreen',\n              position: 'fixed',\n            }}\n          />\n        </ButtonLink>\n      </Link>\n\n      {loading ?? <Loader />}\n\n      <ListFilms films={movies} />\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","API_KEY","requestTrending","response","data","results","requestSearch","query","requestMovieDetails","movieId","requestActors","cast","requestReviews","List","styled","NameFilms","Item","MovieLink","Link","films","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","width","Container","ListInfo","LinkInfo","ActorsFilms","TextOverview","ButtonLink","ContMovieDetails","NameDetailsMovie","UserCont","FormBox","Input","submitAction","startInputText","onSubmit","evt","preventDefault","inputValue","target","elements","value","trim","toast","defaultValue","name","type","autoComplete","placeholder","useSearchParams","searchParams","setSearchParams","useState","loading","setLoading","movies","setMovies","get","useEffect","effectAction","size","style","color","position","Loader","ListFilms"],"sourceRoot":""}